{
  "template_content": {
    "email": {
      "name": "Email Templates",
      "handlebars_supported": true,
      "locations": [
        {
          "field": "subject",
          "description": "Email subject line",
          "supports_snippets": true,
          "syntax": "{{field}} or {{{snippet \"name\"}}}"
        },
        {
          "field": "preheader",
          "description": "Preheader text",
          "supports_snippets": true
        },
        {
          "field": "html_body",
          "description": "HTML email body",
          "supports_snippets": true,
          "supports_data_feeds": true
        },
        {
          "field": "plain_text_body",
          "description": "Plain text email body",
          "supports_snippets": true
        },
        {
          "field": "from_name",
          "description": "From name field",
          "supports_snippets": false
        },
        {
          "field": "reply_to",
          "description": "Reply-to email address",
          "supports_snippets": false
        }
      ],
      "examples": [
        {
          "location": "subject",
          "code": "Hi {{firstName}}, check out these deals!"
        },
        {
          "location": "html_body",
          "code": "<h1>Welcome {{firstName}} {{lastName}}</h1>\n<p>Your email: {{email}}</p>"
        }
      ],
      "notes": [
        "Most flexible Handlebars support",
        "Data feeds require template configuration",
        "Snippets use triple braces in subject lines"
      ]
    },
    "sms": {
      "name": "SMS Templates",
      "handlebars_supported": true,
      "locations": [
        {
          "field": "message_body",
          "description": "SMS message content (text only)",
          "supports_snippets": true,
          "supports_data_feeds": false
        }
      ],
      "examples": [
        {
          "location": "message_body",
          "code": "Hi {{firstName}}! Your order #{{orderId}} has shipped. Track: {{trackingUrl}}"
        }
      ],
      "notes": [
        "Text only (no HTML)",
        "Keep messages concise",
        "URL encoding recommended"
      ],
      "character_limit": 160
    },
    "push": {
      "name": "Push Notification Templates",
      "handlebars_supported": true,
      "string_conversion_in_json": true,
      "locations": [
        {
          "field": "title",
          "description": "Push notification title",
          "supports_snippets": false,
          "json_field": false
        },
        {
          "field": "body",
          "description": "Push notification body",
          "supports_snippets": false,
          "json_field": false
        },
        {
          "field": "deep_link_url",
          "description": "Deep link URL",
          "supports_snippets": false,
          "json_field": false
        },
        {
          "field": "custom_payload",
          "description": "Custom JSON payload",
          "supports_snippets": false,
          "json_field": true,
          "string_conversion": true
        }
      ],
      "examples": [
        {
          "location": "title",
          "code": "{{firstName}}, you have {{cartItemCount}} items in your cart!"
        },
        {
          "location": "custom_payload",
          "code": "{\n  \"userId\": \"{{userId}}\",\n  \"campaignId\": \"{{campaignId}}\"\n}",
          "note": "All values become strings"
        }
      ],
      "notes": [
        "Non-JSON fields support standard Handlebars",
        "JSON payload fields are converted to strings",
        "Deep links support dynamic parameters"
      ]
    },
    "in_app": {
      "name": "In-App Message Templates",
      "handlebars_supported": true,
      "string_conversion_in_json": true,
      "locations": [
        {
          "field": "title",
          "description": "Message title",
          "supports_snippets": false
        },
        {
          "field": "body",
          "description": "Message body (HTML supported)",
          "supports_snippets": true
        },
        {
          "field": "button_text",
          "description": "Button text",
          "supports_snippets": false
        },
        {
          "field": "image_url",
          "description": "Image URL",
          "supports_snippets": false
        },
        {
          "field": "deep_link_url",
          "description": "Deep link URL",
          "supports_snippets": false
        },
        {
          "field": "custom_payload",
          "description": "Custom JSON payload",
          "json_field": true,
          "string_conversion": true
        }
      ],
      "notes": [
        "HTML supported in body field",
        "JSON payload values converted to strings"
      ]
    },
    "mobile_inbox": {
      "name": "Mobile Inbox Templates",
      "handlebars_supported": true,
      "locations": [
        {
          "field": "title",
          "description": "Inbox message title"
        },
        {
          "field": "body",
          "description": "Message body"
        },
        {
          "field": "content",
          "description": "Full message content"
        },
        {
          "field": "button_text",
          "description": "Button text"
        },
        {
          "field": "image_url",
          "description": "Image URL"
        }
      ]
    },
    "whatsapp": {
      "name": "WhatsApp Templates",
      "handlebars_supported": true,
      "locations": [
        {
          "field": "message_body",
          "description": "Message body content"
        },
        {
          "field": "header_text",
          "description": "Header text (if applicable)"
        },
        {
          "field": "footer_text",
          "description": "Footer text"
        },
        {
          "field": "button_text",
          "description": "Button text"
        },
        {
          "field": "quick_reply_text",
          "description": "Quick reply text"
        },
        {
          "field": "template_variables",
          "description": "Variable parameters in approved templates"
        }
      ],
      "examples": [
        {
          "location": "message_body",
          "code": "Hello {{firstName}}, your order {{orderId}} will arrive on {{deliveryDate}}."
        }
      ],
      "notes": [
        "Templates must be pre-approved by Meta",
        "Variables substituted at send time",
        "Template structure must match approved version"
      ]
    },
    "embedded_messaging": {
      "name": "Embedded Messaging (In-App via SDK)",
      "handlebars_supported": true,
      "string_conversion_in_json": true,
      "locations": [
        {
          "field": "message_content",
          "description": "HTML and text content"
        },
        {
          "field": "button_text",
          "description": "Button text"
        },
        {
          "field": "button_url",
          "description": "Button URL"
        },
        {
          "field": "image_url",
          "description": "Image URL"
        },
        {
          "field": "custom_action_payload",
          "description": "Custom action payloads",
          "json_field": true,
          "string_conversion": true
        }
      ],
      "notes": [
        "JSON custom payloads: all values become strings"
      ]
    }
  },
  "segmentation_and_targeting": {
    "segmentation_filters": {
      "name": "Segmentation Filters",
      "handlebars_supported": true,
      "description": "Use Handlebars expressions to create dynamic audience segments",
      "examples": [
        {
          "code": "{{#ifGt totalPurchases 1000}}true{{else}}false{{/ifGt}}",
          "description": "Complex conditional logic for segment membership"
        },
        {
          "code": "{{#ifLt (dateMath signupDate \"add\" \"30\" \"days\") (now)}}true{{else}}false{{/ifGt}}",
          "description": "Date-based segmentation (joined more than 30 days ago)"
        }
      ],
      "use_cases": [
        "Complex conditional logic",
        "Date-based segmentation",
        "Calculated fields from user data"
      ]
    },
    "dynamic_lists": {
      "name": "Dynamic Lists with Parameterized Queries",
      "handlebars_supported": true,
      "description": "Create dynamic lists with Handlebars placeholders populated from event data",
      "requirements": [
        "List must be saved as Dynamic List (not static)",
        "Field names must match triggering event/API call fields",
        "Must be used in triggered campaign or journey",
        "Event or API call must include matching field"
      ],
      "examples": [
        {
          "query": "emailDomain equals {{emailDomainFromEvent}}",
          "trigger_data": {
            "emailDomainFromEvent": "example.com"
          },
          "result": "emailDomain equals \"example.com\"",
          "description": "Filter by dynamic email domain"
        },
        {
          "query": "state equals {{stateFromEvent}} AND city equals {{cityFromEvent}}",
          "description": "Location-based targeting"
        },
        {
          "query": "totalPurchases greaterThan {{minimumSpendFromEvent}}",
          "description": "Purchase amount targeting"
        }
      ],
      "use_cases": [
        "Referral campaigns",
        "Abandoned cart by category",
        "Regional promotions",
        "Tier-based offers",
        "Time-sensitive campaigns"
      ],
      "best_practices": [
        "Use descriptive field names: {{emailDomainFromEvent}}, {{categoryFromEvent}}",
        "Test with actual event data",
        "Document required event fields",
        "Use consistent naming conventions"
      ]
    },
    "journey_splits": {
      "name": "Journey Yes/No Splits with Dynamic Conditions",
      "handlebars_supported": true,
      "description": "Dynamic branching logic based on event properties",
      "requirements": [
        "Must be used in a Journey (not standalone campaigns)",
        "Journey must be triggered (not scheduled)",
        "Field names must match event/API data fields",
        "Event must include the matching field"
      ],
      "examples": [
        {
          "condition": "orderTotal greaterThan {{minimumOrderFromEvent}}",
          "description": "Branch based on order value"
        },
        {
          "condition": "loyaltyTier equals {{requiredTierFromEvent}}",
          "description": "Membership tier split"
        },
        {
          "condition": "state equals {{stateFromEvent}}",
          "description": "Location-based split"
        }
      ],
      "use_cases": [
        "Dynamic discount qualification",
        "Geographic targeting",
        "Segment membership check",
        "Product affinity",
        "Engagement level filtering"
      ]
    },
    "catalog_collections": {
      "name": "Catalog Collections with Dynamic Queries",
      "handlebars_supported": true,
      "description": "Dynamically filter catalog items based on event data or data feed values",
      "requirements": [
        "Catalog must exist with queryable fields",
        "Field names must match event/data feed fields (case-sensitive)",
        "For event data: must be in triggered campaign/journey",
        "For data feed: must enable 'Merge contexts'"
      ],
      "examples": [
        {
          "query": "category equals {{categoryFromEvent}} AND inStock equals true",
          "description": "Filter by dynamic category from event"
        },
        {
          "query": "brand equals {{preferredBrandFromEvent}} AND inStock equals true",
          "description": "Brand-specific filtering"
        },
        {
          "query": "category equals {{dataFeedCategory}} AND featured equals true",
          "description": "Using data feed variables (requires merge contexts)"
        }
      ],
      "use_cases": [
        "Abandoned browse recovery",
        "Similar items by category",
        "Price-based recommendations",
        "Location-based inventory",
        "Seasonal campaign collections"
      ]
    }
  },
  "data_and_webhooks": {
    "data_feed_urls": {
      "name": "Data Feed URLs",
      "handlebars_supported": true,
      "description": "Create dynamic, personalized data feed URLs",
      "supports_snippets": true,
      "location": "Template Settings → Data Feeds → Data Feed URL",
      "examples": [
        {
          "code": "https://api.example.com/recommendations?userId={{userId}}&category={{favoriteCategory}}&locale={{locale}}",
          "description": "Personalized recommendation URL"
        },
        {
          "code": "https://api.example.com/products/recommend?{{{snippet \"product-feed-params\"}}}",
          "description": "Using snippet for complex URL building"
        }
      ],
      "use_cases": [
        "Personalized product recommendations",
        "Location-based content",
        "User-specific inventory",
        "Dynamic pricing"
      ],
      "best_practices": [
        "Always use {{urlEncode field}} for query parameters",
        "Test URLs with actual user data",
        "Use snippets for complex URL logic",
        "Use HTTPS for all data feed URLs",
        "Triple braces required for snippets: {{{snippet \"name\"}}}"
      ]
    },
    "data_feed_headers": {
      "name": "Data Feed HTTP Headers",
      "handlebars_supported": true,
      "description": "Dynamic HTTP headers for data feed requests",
      "examples": [
        {
          "code": "Authorization: Bearer {{apiToken}}"
        }
      ]
    },
    "webhook_urls": {
      "name": "Webhook URLs",
      "handlebars_supported": true,
      "description": "Pass dynamic parameters in webhook query strings",
      "location": "Integrations → Webhooks → Webhook URL",
      "examples": [
        {
          "code": "https://api.example.com/events?userId={{userId}}&email={{urlEncode email}}&eventType={{eventName}}"
        },
        {
          "code": "https://tracking.example.com/webhook?campaignId={{campaignId}}&templateId={{templateId}}&timestamp={{now format=\"yyyy-MM-dd'T'HH:mm:ss\"}}"
        }
      ]
    },
    "webhook_json_body": {
      "name": "Webhook JSON Body",
      "handlebars_supported": true,
      "string_conversion": true,
      "description": "Handlebars in webhook JSON payload (all values become strings)",
      "location": "Integrations → Webhooks → JSON Body",
      "important_behavior": "All Handlebars values are automatically converted to strings, even numbers and booleans",
      "examples": [
        {
          "code": "{\n  \"user\": {\n    \"email\": \"{{email}}\",\n    \"userId\": \"{{userId}}\",\n    \"isPremium\": \"{{isPremiumUser}}\"\n  },\n  \"campaign\": {\n    \"campaignId\": \"{{campaignId}}\",\n    \"sentAt\": \"{{now format='yyyy-MM-dd'T'HH:mm:ss'Z'}}\"\n  }\n}",
          "note": "All values will be strings at runtime"
        }
      ],
      "best_practices": [
        "Always quote Handlebars references: \"field\": \"{{value}}\"",
        "Document that receiving API must parse strings",
        "Use toJson for complex objects",
        "Use join helper for arrays: \"{{join array ','}}\"",
        "Receiving API must convert strings to appropriate types"
      ]
    },
    "webhook_headers": {
      "name": "Webhook HTTP Headers",
      "handlebars_supported": true,
      "description": "Custom HTTP headers for webhooks",
      "examples": [
        {
          "code": "X-User-ID: {{userId}}"
        }
      ]
    }
  },
  "api_endpoints": {
    "campaigns_trigger_api": {
      "name": "Campaign Trigger API (/api/campaigns/trigger)",
      "handlebars_supported": true,
      "data_syntax": "{{fieldName}} - Curly braces (Handlebars syntax)",
      "data_source": "Event data (per-recipient)",
      "description": "Trigger existing campaigns with per-recipient transactional data",
      "endpoint": "POST /api/campaigns/trigger",
      "use_cases": [
        "Order confirmations",
        "Password resets",
        "Shipping notifications",
        "Transaction receipts",
        "Account alerts",
        "Any user-specific transactional event"
      ],
      "api_structure": {
        "campaignId": "Required - ID of campaign to trigger",
        "recipientEmail": "Email address of recipient (or recipientUserId)",
        "dataFields": "JSON object - becomes event data in template"
      },
      "example_request": {
        "method": "POST",
        "endpoint": "/api/campaigns/trigger",
        "body": {
          "campaignId": 12345,
          "recipientEmail": "user@example.com",
          "dataFields": {
            "orderId": "ORD-789",
            "orderTotal": 99.99,
            "productName": "Wireless Headphones",
            "quantity": 2,
            "trackingUrl": "https://example.com/track/ABC123"
          }
        }
      },
      "template_access": {
        "syntax": "{{fieldName}} - Standard Handlebars curly braces",
        "examples": [
          {
            "description": "Direct field access",
            "code": "<p>Order #{{orderId}}</p>\n<p>Total: {{numberFormat orderTotal \"currency\" locale}}</p>\n<p>Item: {{productName}} (Qty: {{quantity}})</p>"
          },
          {
            "description": "Subject line",
            "code": "Subject: Order #{{orderId}} Confirmed"
          },
          {
            "description": "With user profile data",
            "code": "<p>Hi {{firstName}},</p>\n<p>Your order #{{orderId}} for {{numberFormat orderTotal \"currency\" locale}} is confirmed.</p>"
          },
          {
            "description": "In catalog lookups",
            "code": "{{#catalog \"products\" productId as |product|}}\n  <h3>{{product.name}}</h3>\n{{/catalog}}"
          },
          {
            "description": "In conditionals",
            "code": "{{#ifGt orderTotal 100}}\n  Free shipping on orders over $100!\n{{/ifGt}}"
          }
        ]
      },
      "data_priority": {
        "order": [
          "1. API dataFields (highest priority)",
          "2. User profile data",
          "3. Data feed data (lowest priority)"
        ],
        "example": "If API has \"firstName\": \"John\" and profile has \"firstName\": \"Jane\", {{firstName}} displays \"John\""
      },
      "supported_channels": [
        "Email",
        "SMS",
        "Push",
        "In-App",
        "WhatsApp",
        "All message types"
      ],
      "key_features": [
        "Per-recipient unique data",
        "Overrides user profile fields with same name",
        "Available in all template contexts (subject, body, snippets)",
        "Works with all Handlebars helpers",
        "Supports nested objects and arrays"
      ],
      "important_notes": [
        "One API call = one recipient",
        "Best for transactional messages",
        "Data is ephemeral (not stored in user profile)",
        "Field names are case-sensitive"
      ]
    },
    "campaigns_create_api": {
      "name": "Campaign Create API (/api/campaigns/create)",
      "handlebars_supported": true,
      "data_syntax": "[[fieldName]] - Double square brackets (Data feed syntax)",
      "data_source": "Campaign-level data feed (same for all recipients)",
      "description": "Create new campaigns from templates with campaign-wide data",
      "endpoint": "POST /api/campaigns/create",
      "critical_limitation": "Email campaigns ONLY - dataFields not supported for SMS, Push, In-App, or WhatsApp",
      "use_cases": [
        "Marketing blasts with campaign-specific data",
        "Newsletters with monthly/weekly themes",
        "Sale announcements with promotion details",
        "Event invitations with event-specific info",
        "Product launches with product data"
      ],
      "api_structure": {
        "name": "Campaign name",
        "templateId": "ID of template to use",
        "listIds": "Array of list IDs to send to",
        "dataFields": "JSON object - becomes data feed data (EMAIL ONLY)"
      },
      "example_request": {
        "method": "POST",
        "endpoint": "/api/campaigns/create",
        "body": {
          "name": "Spring Sale 2024",
          "templateId": 123456,
          "listIds": [789, 012],
          "dataFields": {
            "saleName": "Spring Clearance",
            "discountPercent": 25,
            "saleEndDate": "2024-03-31",
            "promoCode": "SPRING25",
            "featuredCategory": "Electronics"
          }
        }
      },
      "template_access": {
        "syntax": "[[fieldName]] - MUST use double square brackets (data feed syntax)",
        "wrong_syntax": "{{fieldName}} - This will NOT work for campaign dataFields",
        "examples": [
          {
            "description": "Correct: Double square brackets",
            "code": "<h1>[[saleName]] - [[discountPercent]]% Off!</h1>\n<p>Use code: [[promoCode]]</p>\n<p>Sale ends: [[saleEndDate]]</p>"
          },
          {
            "description": "Wrong: Curly braces (won't work)",
            "code": "<!-- WRONG - This will not render -->\n<h1>{{saleName}}</h1>"
          },
          {
            "description": "Mixing campaign data with user profile",
            "code": "<!-- Campaign data: [[double brackets]] -->\n<h1>[[saleName]]</h1>\n\n<!-- User profile: {{curly braces}} -->\n<p>Hi {{firstName}},</p>\n\n<!-- Mix both -->\n<p>Save [[discountPercent]]% in your favorite category: {{preferredCategory}}</p>"
          },
          {
            "description": "Using Handlebars helpers with data feed syntax",
            "code": "<!-- You CAN use Handlebars helpers -->\n<p>Sale ends: {{dateFormat [[saleEndDate]] \"MMMM d, yyyy\"}}</p>\n<p>Save: {{numberFormat [[discountPercent]] \"decimal\"}}%</p>\n\n{{#ifGt [[discountPercent]] 20}}\n  <div class=\"big-sale\">Huge Savings!</div>\n{{/ifGt}}"
          }
        ]
      },
      "data_scope": {
        "campaign_level": "All recipients in listIds see the SAME [[field]] values",
        "user_level": "Each recipient sees their own {{field}} values from user profile",
        "example": "All 10,000 recipients see [[saleName]] as \"Spring Sale\", but each sees their own {{firstName}}"
      },
      "supported_channels": [
        "Email ONLY"
      ],
      "not_supported": [
        "SMS campaigns",
        "Push campaigns",
        "In-App campaigns",
        "WhatsApp campaigns"
      ],
      "key_features": [
        "Campaign-wide data (same for all recipients)",
        "Use data feed syntax [[field]]",
        "Email campaigns only",
        "Can use Handlebars helpers with [[syntax]]",
        "Combine with user profile data {{syntax}}"
      ],
      "important_notes": [
        "MUST use [[double brackets]] for dataFields",
        "Email campaigns only - not SMS/Push/In-App",
        "One API call = one campaign to multiple recipients",
        "Best for marketing blasts with campaign-specific data",
        "Data is campaign-scoped, not user-scoped"
      ],
      "common_errors": [
        {
          "error": "Using {{curly}} instead of [[square]]",
          "wrong": "{{saleName}}",
          "correct": "[[saleName]]",
          "result": "Field won't render if using wrong syntax"
        },
        {
          "error": "Trying to use in SMS campaign",
          "issue": "dataFields only work for email campaigns",
          "solution": "Use standard data feed or user profile fields for non-email"
        }
      ]
    },
    "api_comparison": {
      "name": "Trigger API vs. Create API - Quick Reference",
      "comparison_table": {
        "data_syntax": {
          "trigger": "{{fieldName}} - Curly braces",
          "create": "[[fieldName]] - Double square brackets"
        },
        "data_source": {
          "trigger": "Event data (per-recipient)",
          "create": "Data feed data (campaign-wide)"
        },
        "scope": {
          "trigger": "Per-recipient (unique per user)",
          "create": "Campaign-wide (same for all)"
        },
        "recipients": {
          "trigger": "Single recipient per API call",
          "create": "Multiple recipients (listIds)"
        },
        "use_case": {
          "trigger": "Transactional (order confirmations, receipts)",
          "create": "Marketing blasts (sales, newsletters)"
        },
        "channels": {
          "trigger": "All channels (Email, SMS, Push, In-App, WhatsApp)",
          "create": "Email ONLY"
        },
        "priority": {
          "trigger": "Highest (overrides user profile)",
          "create": "N/A (different syntax, no conflict)"
        }
      },
      "when_to_use_which": {
        "use_trigger_for": [
          "Order confirmations with order-specific data",
          "Password resets with unique tokens",
          "Shipping notifications with tracking numbers",
          "Transaction receipts",
          "User-specific transactional events"
        ],
        "use_create_for": [
          "Marketing campaigns with sale/promotion data",
          "Newsletters with monthly themes",
          "Product launch announcements",
          "Event invitations with event details",
          "Blast campaigns with campaign-specific content"
        ]
      },
      "can_use_both": {
        "scenario": "E-commerce company",
        "trigger_usage": "Order confirmations ({{orderId}}, {{total}})",
        "create_usage": "Weekly sale blasts ([[saleName]], [[discount]])",
        "note": "Both APIs serve different purposes and use different syntax"
      }
    }
  },
  "project_settings": {
    "hosted_unsubscribe_url": {
      "name": "Hosted Unsubscribe URL (Project Settings)",
      "handlebars_supported": true,
      "data_source": "User profile ONLY",
      "description": "Dynamic hosted unsubscribe URLs with user information from Project Settings",
      "location": "Project Settings → Subscription Settings → Hosted Unsubscribe URL",
      "critical_limitations": {
        "user_profile_only": "Handlebars variables ONLY pull from User profile - NOT from event data, NOT from template {{assign}} statements",
        "no_template_assignments": "Cannot use {{assign}} in templates to create variables for hosted unsubscribe URL",
        "must_use_defaults": "MUST use {{#if}}/{{else}} with default values to prevent rendering issues if field is missing",
        "pre_template_execution": "Hosted unsubscribe URL is generated before template execution, so template-level variables are not available"
      },
      "best_practices": [
        "Always include default values in {{else}} blocks",
        "Store necessary data in User profile fields (e.g., 'publication', 'brandDomain', 'region')",
        "Use {{#if field}}{{field}}{{else}}default{{/if}} pattern for dynamic domains",
        "Test with users who have missing/null profile fields",
        "Use urlEncode for any user-provided data in query parameters"
      ],
      "examples": [
        {
          "use_case": "Dynamic subdomain based on user profile",
          "code": "https://{{#if publication}}{{publication}}{{else}}www.reiterablecoffee{{/if}}.com/preferences",
          "description": "Uses 'publication' field from User profile to set subdomain, falls back to default",
          "note": "The 'publication' field MUST exist in User profile - cannot be set in template"
        },
        {
          "use_case": "Query parameters with user data",
          "code": "https://example.com/preferences?email={{urlEncode email}}&userId={{urlEncode userId}}&listIds={{join emailListIds \",\"}}",
          "description": "Standard query parameter approach with URL encoding"
        },
        {
          "use_case": "Dynamic domain with region",
          "code": "https://{{#if region}}{{region}}{{else}}us{{/if}}.example.com/unsubscribe?email={{urlEncode email}}",
          "description": "Region-based subdomain from User profile with 'us' as default"
        },
        {
          "use_case": "Brand-specific preferences page",
          "code": "https://preferences.example.com/{{#if brandId}}{{brandId}}{{else}}default{{/if}}?user={{urlEncode userId}}",
          "description": "Brand-specific path from User profile field"
        }
      ],
      "common_errors": [
        {
          "error": "Missing subdomain or broken URL",
          "cause": "User profile field is null/missing and no {{else}} default provided",
          "fix": "Always use {{#if field}}{{field}}{{else}}default{{/if}} pattern"
        },
        {
          "error": "Variable not rendering",
          "cause": "Trying to use {{assign}} from template or event data",
          "fix": "Store the value in User profile field instead"
        },
        {
          "error": "Different values in different emails",
          "cause": "Expecting event data to populate variable",
          "fix": "Hosted unsubscribe URL only uses User profile data, not event data"
        }
      ],
      "use_in_templates": "{{hostedUnsubscribeUrl}}",
      "workflow": {
        "step_1": "Set Hosted Unsubscribe URL in Project Settings with Handlebars",
        "step_2": "Ensure User profile has necessary fields (e.g., 'publication', 'region', 'brandId')",
        "step_3": "Use {{hostedUnsubscribeUrl}} in email templates",
        "step_4": "URL is generated using current User profile data when email is sent"
      },
      "why_user_profile_only": "The hosted unsubscribe URL is configured at the project level and is evaluated in the context of the user record, not within any specific campaign or message template. This is why it can only access User profile fields."
    }
  },
  "template_previews": {
    "name": "Template Previews and Validation",
    "handlebars_supported": true,
    "description": "Handlebars renders in preview mode for testing",
    "notes": [
      "Syntax validated before save",
      "Preview with real user data recommended",
      "Test edge cases (missing fields, nulls)"
    ]
  },
  "quick_reference": {
    "full_support": [
      "Email (all fields)",
      "SMS body",
      "Push non-JSON fields",
      "In-App non-JSON fields",
      "Mobile Inbox",
      "WhatsApp",
      "Embedded Messaging content",
      "Segmentation filters",
      "Dynamic lists",
      "Journey splits",
      "Catalog collections",
      "Data feed URLs (with snippets)",
      "Webhook URLs",
      "Hosted unsubscribe URL",
      "Template previews"
    ],
    "string_conversion_contexts": [
      "Webhook JSON body",
      "Push custom payload",
      "In-App custom payload",
      "WhatsApp custom data",
      "Embedded messaging custom actions"
    ],
    "no_snippet_support": [
      "SMS body (snippets work, but no HTML rendering)",
      "Push title/body/deep links",
      "In-App title/button text/image URLs (body supports snippets)",
      "URL parameters (snippets work in URLs, not as inline)"
    ]
  }
}

